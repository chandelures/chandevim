" Enviroment {
    " Basic {
        set nocompatible
        set background=dark
    " }

    " Setup Bundle {
        call plug#begin('~/.vim/plugged')
    " }

" }

" Bundles {

    if !exists('g:plug_group')
        let g:plug_group=['general', 'programming', 'autocomplete', 'python',
        \ 'shell', 'javascript', 'tex', 'markdown', 'web']
    endif

    " General {
        if count(g:plug_group, 'general')
            if executable('ack')
                Plug 'mileszs/ack.vim', {'branch': 'master'}
            endif
            Plug 'scrooloose/nerdtree', {'branch': 'master'}
            Plug 'altercation/vim-colors-solarized', {'branch': 'master'}
            Plug 'vim-airline/vim-airline', {'branch': 'master'}
            Plug 'vim-airline/vim-airline-themes', {'branch': 'master'}
            Plug 'jiangmiao/auto-pairs', {'branch': 'master'}
            Plug 'easymotion/vim-easymotion', {'branch': 'master'}
            Plug 'kien/ctrlp.vim', {'branch': 'master'}
        endif
    " }

    " Programming {
        if count(g:plug_group, 'programming')
            if executable('ctags')
                Plug 'majutsushi/tagbar', {'branch': 'master'}
            endif
            Plug 'scrooloose/syntastic', {'branch': 'master'}
            Plug 'scrooloose/nerdcommenter', {'branch': 'master'}
            Plug 'mbbill/undotree', {'branch': 'master'}
            Plug 'airblade/vim-gitgutter', {'branch': 'master'}
            Plug 'luochen1990/rainbow', {'branch': 'master'}
        endif
    " }
    
    " AutoComplete {
        if count(g:plug_group, 'autocomplete') && (has('python') || has('python3')) 
            Plug 'Valloric/YouCompleteMe', {'branch': 'master'}
        endif
    " }

    " Shell {
        if count(g:plug_group, 'shell')
            Plug 'Shougo/vimproc', {'branch': 'master', 'do': 'make'}
            Plug 'Shougo/vimshell.vim', {'branch': 'master'}
        endif
    " }

    " Python {
        if count(g:plug_group, 'python')
            Plug 'python-mode/python-mode', {'for': 'python', 'branch': 'develop'}      
        endif
    " }

    " Javascript {
        if count(g:plug_group, 'javascript')
            Plug 'pangloss/vim-javascript', {'for': 'javascript', 'branch': 'master'}
        endif
    " }
    
    " TeX {
        if count(g:plug_group, 'tex')
            Plug 'lervag/vimtex', {'for': 'tex', 'branch': 'master'}
        endif
    " }

    " Markdown {
        if count(g:plug_group, 'markdown')
            Plug 'godlygeek/tabular', {'for': 'markdown', 'branch': 'master'}
            Plug 'plasticboy/vim-markdown', {'for': 'markdown', 'branch': 'master'}
        endif
    " }

    " Web {
        if count(g:plug_group, 'web')
            Plug 'mattn/webapi-vim', {'branch': 'master'}
            Plug 'mattn/emmet-vim', {'branch': 'master'}
            Plug 'hail2u/vim-css3-syntax', {'branch': 'master'}
        endif
    " }
" }

" End Plug {
    call plug#end()
" }

" Use local bundle file {
    if filereadable(expand("~/.vimrc.bundles.local"))
        source ~/.vimrc.plugs.local
    endif
" }
